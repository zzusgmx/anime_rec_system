# Generated by Django 5.1.7 on 2025-03-31 13:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('anime', '0003_alter_anime_like_count'),
        ('recommendation', '0005_rename_anime_like_idx_anime_likes_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interaction_type', models.CharField(choices=[('reply', '评论回复'), ('like', '点赞评论'), ('mention', '提及用户')], max_length=10, verbose_name='互动类型')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('strength', models.FloatField(default=1.0, verbose_name='互动强度')),
            ],
            options={
                'verbose_name': '用户互动',
                'verbose_name_plural': '用户互动列表',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='usercomment',
            name='is_reply',
            field=models.BooleanField(default=False, verbose_name='是否为回复'),
        ),
        migrations.AddField(
            model_name='usercomment',
            name='parent_comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='recommendation.usercomment', verbose_name='父评论'),
        ),
        migrations.AddField(
            model_name='usercomment',
            name='reply_count',
            field=models.PositiveIntegerField(default=0, verbose_name='回复数'),
        ),
        migrations.AddIndex(
            model_name='usercomment',
            index=models.Index(fields=['parent_comment', '-timestamp'], name='reply_time_idx'),
        ),
        migrations.AddIndex(
            model_name='userlike',
            index=models.Index(fields=['user', '-timestamp'], name='user_like_time_idx'),
        ),
        migrations.AddField(
            model_name='userinteraction',
            name='comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='recommendation.usercomment', verbose_name='相关评论'),
        ),
        migrations.AddField(
            model_name='userinteraction',
            name='from_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_initiated', to=settings.AUTH_USER_MODEL, verbose_name='互动发起者'),
        ),
        migrations.AddField(
            model_name='userinteraction',
            name='like',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='recommendation.userlike', verbose_name='相关点赞'),
        ),
        migrations.AddField(
            model_name='userinteraction',
            name='to_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_received', to=settings.AUTH_USER_MODEL, verbose_name='互动接收者'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['from_user', '-timestamp'], name='from_user_time_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['to_user', '-timestamp'], name='to_user_time_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['to_user', 'is_read'], name='user_unread_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['interaction_type'], name='interaction_type_idx'),
        ),
    ]
